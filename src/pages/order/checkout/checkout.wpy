<style lang="css">
  @import '../../../zanui/btn.wxss';
  @import '../../../zanui/panel.wxss';
  @import '../../../zanui/cell.wxss';
  @import '../../../zanui/icon.wxss';
  @import '../../../zanui/card.wxss';
  @import '../../../zanui/color.wxss';
  .amount:before {
    content: '￥';
  }

  .submit {
    margin: 8px;
  }

  /*单元格*/
  .cell {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items:center;
    margin: 4px;
    border-bottom: 1px solid #eee;
    line-height: 28px;
  }

  .cell:last-child {
    border-bottom: 0;
  }

  /*label显示字符*/
  .cell text:first-child {
    width: 50px;
  }

  /*请先填写地址*/
  .area_select {
    width: 100%;
  }
</style>

<template>

  <!-- 如果没有地址 先去添加地址 -->
  <view class="zan-panel" >
    <view class="zan-cell zan-cell--access" @tap="bindCreateNew" wx:if="{{addressList.length == 0}}">
      <view class="zan-cell__bd">请先添加地址</view>
      <view class="zan-cell__ft"></view>
    </view>
    <view class="zan-cell" wx:else>
      <!--<view class="zan-cell__bd">-->
        <picker bindchange="bindPickerChange" value="{{index}}" range="{{addressList}}">
          {{addressList[addressIndex]}}
        </picker>
      <!--</view>-->
    </view>
  </view>

  <view class="zan-panel-title">优惠购</view>
    <view class="zan-panel" wx:for="{{carts}}">
      <view class="zan-cell"><view class="zan-card">
        <!-- 图片预览 -->
        <view class="zan-card__thumb">
          <image class="zan-card__img"
                 src="{{item.goods.avatar}}"
                 mode="aspectFit"
          />
        </view>

        <view class="zan-card__detail">
          <view class="zan-card__detail-row">
            <view class="zan-card__right-col">¥ {{item.goods.price}}</view>
            <view class="zan-card__left-col zan-ellipsis--l2">
              {{item.goods.title}}
            </view>
          </view>

          <view class="zan-card__detail-row zan-c-gray-darker">
            <view class="zan-card__right-col">x{{item.quantity}}</view>
          </view>
        </view>
      </view></view>
      <view class="zan-cell">
        <view class="zan-cell__bd">配送方式</view>
        <view class="zan-cell__ft">免运费</view>
      </view>
    </view>
    <view class="zan-panel">
      <view class="zan-cell">
        <zanField :options="base_notice" :value="value" componentId="zanField"></zanField>
      </view>
      <view class="zan-cell">
        <view class="zan-cell__bd">商品总金额</view>
        <view class="zan-cell__ft">
          <view style="color:red;">
            ￥{{amount}}
          </view>
        </view>
      </view>
      <view class="zan-btn zan-btn--primary" @tap="confirmOrder">提交订单</view>
    </view>
</template>

<script>
  import wepy from 'wepy'
  import AV from '../../../libs/av-weapp-min'
  import zanField from '../../../components/zan-field'
  export default class Order extends wepy.page {
    config = {
      navigationBarTitleText: '订单'
    }
    components = {
      zanField: zanField,
    }
    events = {
      zanFieldChange(e) {
        const { componentId, detail } = e

        console.log('[zan:field:change]', componentId, detail)
      },

      zanFieldFocus(e) {
        const { componentId, detail } = e

        console.log('[zan:field:focus]', componentId, detail)
      },

      zanFieldBlur(e) {
        const { componentId, detail } = e

        console.log('[zan:field:blur]', componentId, detail)
      }
    }
    data = {
      base_notice: {
        title: '留言',
        type: 'textarea',
        placeholder: '给商家留言'
      },
      amount : 0,
      carts: [],
      addressList: [],
      addressIndex: 0,
      addressObjects:[],
    }
    methods = {
      bindPickerChange (e) {

        this.addressIndex = e.detail.value
        this.$apply();
      },
      bindCreateNew () {
        var addressList = this.addressList;
        if (addressList.length == 0) {
          wx.navigateTo({
            url: '../../address/list'
          });
        }
      },
      // 提交订单
      confirmOrder: function () {
        // submit order
        var carts = this.carts;
        var that = this;
        var user = AV.User.current();
        var order = new AV.Object('Order');
        order.set('user', user);
        order.set('status', 0);
        order.set('amount', this.amount);
        // set address
//        var address = this.addressObjects[this.addressIndex];
        var address = this.addressList[this.addressIndex];
        order.set('address', address);
        order.save().then(function (saveResult) {
          console.log(saveResult)
          if (saveResult) {
            // OrderGoodsMap数组，批量提交
            var orderGoodsMapArray = [];
            // create buys & delete carts
            for (var i = 0; i < carts.length; i++) {
              // 创建订单商品中间表OrderGoodsMap
              var orderGoodsMap = AV.Object('OrderGoodsMap');
              // 遍历购物车对象
              // move cart to buy
              var cart = carts[i];
              orderGoodsMap.set('order', saveResult);
              orderGoodsMap.set('goods', cart.get('goods'));
              orderGoodsMap.set('quantity', cart.get('quantity'));
              orderGoodsMap.set('user', cart.get('user'));
              cart.destroy(); // 购物车里面的东西就消除
              orderGoodsMapArray.push(orderGoodsMap);
            }

            // 批量保存到后台里面
            AV.Object.saveAll(orderGoodsMapArray).then(function (res) {
              // 保存到云端
              // 下单成功
              wx.showToast({
                title: '下单成功,暂不支持付款',
                icon: 'success',
                duration: 2000
              })
//              wx.navigateTo({
//                url: '../../../../../payment/payment?orderId=' + order.get('objectId') + '&totalFee=' + that.data.amount
//              });

            });
          }
        });
      },
    }
    loadAddress() {
      var that = this;
      var user = AV.User.current();
      var query = new AV.Query('WechatAddress');
      query.equalTo('user', user);
      query.find().then(function (address) {
        var addressList = [];
        for (var i = 0; i < address.length; i ++) {
          // find the default address
          if (address[i].get('isDefault') == true) {
            that.addressIndex = i
          }
          addressList.push(address[i].get('provinceName') + address[i].get('countyName') + address[i].get('detailInfo'));
        }
        that.addressObjects = address;
        that.addressList =  addressList
        that.$apply();
        });

    }
    onShow () {
      this.loadAddress();
    }
    readCarts (options) {
      var that = this;
      // from carts
      // amount
      var amount = parseFloat(options.amount);

      that.amount = amount

      // cartIds str
      var cartIds = options.cartIds;
      var cartIdArray = cartIds.split(',');
      // restore carts object
      for (var i = 0; i < cartIdArray.length; i++) {
        var query = new AV.Query('Cart');
        query.include('goods');
        query.get(cartIdArray[i]).then(function (cart) {
          var carts = that.carts == undefined ? [] : that.carts;
          carts.push(cart);

          that.carts = carts;
          that.$apply();
          console.log(that.carts)
        }, function (error) {

        });
      }
    }
    onLoad(options) {
      this.readCarts(options);
    }
  }
</script>
